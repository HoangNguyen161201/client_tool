{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoang\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\learnWeb\\\\reactjs\\\\memories_project\\\\client\\\\src\\\\components\\\\categories.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport inputField from '../conFigForm/inputField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ncategories.propTypes = {\n  data: PropTypes.array.isRequired\n};\nexport default function categories(props) {\n  const Yub = yup.object({\n    title: yup.string().required('Not null')\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-3 col-12 col-sm-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"fs-4\",\n      children: \"Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      vali: values => {\n        const errors = {};\n\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = 'Invalid email address';\n        }\n\n        return errors;\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          type: \"email\",\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"password\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      style: {\n        color: '#4a50c0',\n        fontWeight: 500\n      },\n      className: \"text-decoration-none d-block \",\n      to: \"/post\",\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), props.data.map((value, key) => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        style: {\n          color: '#4a50c0',\n          fontWeight: 500\n        },\n        className: \"text-decoration-none d-block\",\n        to: '?Idcategory=' + value._id,\n        children: value.title\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 28\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/hoang/OneDrive/Máy tính/learnWeb/reactjs/memories_project/client/src/components/categories.js"],"names":["React","PropTypes","Link","Formik","Form","Field","ErrorMessage","yup","inputField","categories","propTypes","data","array","isRequired","props","Yub","object","title","string","required","email","password","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting","color","fontWeight","map","value","key","_id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as yup from 'yup';\r\nimport inputField from '../conFigForm/inputField';\r\ncategories.propTypes = {\r\n    data: PropTypes.array.isRequired\r\n}\r\nexport default function categories(props) {\r\n    const Yub = yup.object({\r\n        title: yup.string().required('Not null')\r\n    })\r\n    return (\r\n        <div className='mb-3 col-12 col-sm-3'>\r\n            <p className='fs-4'>Categories</p>\r\n            <Formik\r\n       initialValues={{ email: '', password: '' }}\r\n       vali={values => {\r\n         const errors = {};\r\n         if (!values.email) {\r\n           errors.email = 'Required';\r\n         } else if (\r\n           !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n         ) {\r\n           errors.email = 'Invalid email address';\r\n         }\r\n         return errors;\r\n       }}\r\n       onSubmit={(values, { setSubmitting }) => {\r\n         setTimeout(() => {\r\n           alert(JSON.stringify(values, null, 2));\r\n           setSubmitting(false);\r\n         }, 400);\r\n       }}\r\n     >\r\n       {({ isSubmitting }) => (\r\n         <Form>\r\n           <Field type=\"email\" name=\"email\" />\r\n           <ErrorMessage name=\"email\" component=\"div\" />\r\n           <Field type=\"password\" name=\"password\" />\r\n           <ErrorMessage name=\"password\" component=\"div\" />\r\n           <button type=\"submit\" disabled={isSubmitting}>\r\n             Submit\r\n           </button>\r\n         </Form>\r\n       )}\r\n     </Formik>\r\n            <Link style={{ color: '#4a50c0', fontWeight: 500}} className='text-decoration-none d-block ' to='/post'>All</Link>\r\n            {\r\n\r\n                props.data.map((value,key)=>{\r\n                    return <Link  style={{ color: '#4a50c0', fontWeight: 500}} className='text-decoration-none d-block' to={'?Idcategory='+value._id} key={key}>{value.title}</Link>\r\n                }) \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}