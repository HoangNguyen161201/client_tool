{"ast":null,"code":"import React from'react';import{Link}from'react-router-dom';import{Formik,Form,Field,ErrorMessage}from'formik';import*as yup from'yup';import inputField from'../conFigForm/inputField';import{useDispatch as UseDispatch}from'react-redux';import actionCategories from'../redux/actions/categories';import{POST}from'../api/index';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function categories(props){var dispatch=UseDispatch();var Yub=yup.object({title:yup.string().required('Not null')});return/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3 col-12 col-sm-3\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"fs-4\",children:\"Categories\"}),/*#__PURE__*/_jsx(Formik,{initialValues:{title:''},validationSchema:Yub,onSubmit:function onSubmit(values,_ref){var setSubmitting=_ref.setSubmitting;setTimeout(function(){POST('/categories/addNew',values).then(function(e){dispatch(actionCategories.getData([e]));});setSubmitting(false);},400);},children:function children(_ref2){var isSubmitting=_ref2.isSubmitting;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(Field,{type:\"text\",name:\"title\",component:inputField,label:\"Add new\"}),/*#__PURE__*/_jsx(ErrorMessage,{style:{color:'red'},name:\"title\",component:\"div\"}),/*#__PURE__*/_jsx(\"button\",{className:\"mt-3 mb-3 btn btn-primary\",type:\"submit\",disabled:isSubmitting,children:\"Submit\"})]});}}),/*#__PURE__*/_jsx(Link,{style:{color:'#4a50c0',fontWeight:500},className:\"mb-2 text-decoration-none d-block \",to:\"/post\",children:\"All\"}),props.data.map(function(value,key){return/*#__PURE__*/_jsx(Link,{style:{color:'#4a50c0',fontWeight:500},className:\"mb-2 text-decoration-none d-block\",to:'?Idcategory='+value._id,children:value.title},key);})]});}","map":{"version":3,"sources":["C:/Users/hoang/OneDrive/Máy tính/learnWeb/reactjs/memories_project/client/src/components/categories.js"],"names":["React","Link","Formik","Form","Field","ErrorMessage","yup","inputField","useDispatch","UseDispatch","actionCategories","POST","categories","props","dispatch","Yub","object","title","string","required","values","setSubmitting","setTimeout","then","e","getData","isSubmitting","color","fontWeight","data","map","value","key","_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,KAAvB,CAA8BC,YAA9B,KAAkD,QAAlD,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,OAASC,WAAW,GAAIC,CAAAA,WAAxB,KAA2C,aAA3C,CACA,MAAOC,CAAAA,gBAAP,KAA6B,6BAA7B,CACA,OAASC,IAAT,KAAqB,cAArB,C,wFAIA,cAAe,SAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CACxC,GAAMC,CAAAA,QAAQ,CAAGL,WAAW,EAA5B,CACA,GAAMM,CAAAA,GAAG,CAAGT,GAAG,CAACU,MAAJ,CAAW,CACrBC,KAAK,CAAEX,GAAG,CAACY,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,CADc,CAAX,CAAZ,CAGA,mBACE,aAAK,SAAS,CAAC,sBAAf,wBACE,UAAG,SAAS,CAAC,MAAb,wBADF,cAEE,KAAC,MAAD,EACE,aAAa,CAAE,CAAEF,KAAK,CAAE,EAAT,CADjB,CAEE,gBAAgB,CAAEF,GAFpB,CAGE,QAAQ,CAAE,kBAACK,MAAD,MAA+B,IAApBC,CAAAA,aAAoB,MAApBA,aAAoB,CACvCC,UAAU,CAAC,UAAM,CACfX,IAAI,CAAC,oBAAD,CAAuBS,MAAvB,CAAJ,CAAmCG,IAAnC,CACE,SAAAC,CAAC,CAAI,CACHV,QAAQ,CAACJ,gBAAgB,CAACe,OAAjB,CAAyB,CAACD,CAAD,CAAzB,CAAD,CAAR,CACD,CAHH,EAKAH,aAAa,CAAC,KAAD,CAAb,CACD,CAPS,CAOP,GAPO,CAAV,CAQD,CAZH,UAcG,4BAAGK,CAAAA,YAAH,OAAGA,YAAH,oBACC,MAAC,IAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,OAAxB,CAAgC,SAAS,CAAEnB,UAA3C,CAAuD,KAAK,CAAC,SAA7D,EADF,cAEE,KAAC,YAAD,EAAc,KAAK,CAAE,CAAEoB,KAAK,CAAE,KAAT,CAArB,CAAuC,IAAI,CAAC,OAA5C,CAAoD,SAAS,CAAC,KAA9D,EAFF,cAGE,eAAQ,SAAS,CAAC,2BAAlB,CAA8C,IAAI,CAAC,QAAnD,CAA4D,QAAQ,CAAED,YAAtE,oBAHF,GADD,EAdH,EAFF,cA0BE,KAAC,IAAD,EAAM,KAAK,CAAE,CAAEC,KAAK,CAAE,SAAT,CAAoBC,UAAU,CAAE,GAAhC,CAAb,CAAoD,SAAS,CAAC,oCAA9D,CAAmG,EAAE,CAAC,OAAtG,iBA1BF,CA6BIf,KAAK,CAACgB,IAAN,CAAWC,GAAX,CAAe,SAACC,KAAD,CAAQC,GAAR,CAAgB,CAC7B,mBAAO,KAAC,IAAD,EAAM,KAAK,CAAE,CAAEL,KAAK,CAAE,SAAT,CAAoBC,UAAU,CAAE,GAAhC,CAAb,CAAoD,SAAS,CAAC,mCAA9D,CAAkG,EAAE,CAAE,eAAiBG,KAAK,CAACE,GAA7H,UAA6IF,KAAK,CAACd,KAAnJ,EAAuIe,GAAvI,CAAP,CACD,CAFD,CA7BJ,GADF,CAoCD","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as yup from 'yup';\r\nimport inputField from '../conFigForm/inputField';\r\nimport { useDispatch as UseDispatch } from 'react-redux';\r\nimport actionCategories from '../redux/actions/categories';\r\nimport { POST } from '../api/index';\r\ncategories.propTypes = {\r\n  data: PropTypes.array.isRequired\r\n}\r\nexport default function categories(props) {\r\n  const dispatch = UseDispatch();\r\n  const Yub = yup.object({\r\n    title: yup.string().required('Not null')\r\n  })\r\n  return (\r\n    <div className='mb-3 col-12 col-sm-3'>\r\n      <p className='fs-4'>Categories</p>\r\n      <Formik\r\n        initialValues={{ title: '' }}\r\n        validationSchema={Yub}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setTimeout(() => {\r\n            POST('/categories/addNew', values).then(\r\n              e => {\r\n                dispatch(actionCategories.getData([e]));\r\n              }\r\n            )\r\n            setSubmitting(false);\r\n          }, 400);\r\n        }}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form>\r\n            <Field type=\"text\" name=\"title\" component={inputField} label='Add new' />\r\n            <ErrorMessage style={{ color: 'red' }} name=\"title\" component=\"div\" />\r\n            <button className='mt-3 mb-3 btn btn-primary' type=\"submit\" disabled={isSubmitting}>\r\n              Submit\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <Link style={{ color: '#4a50c0', fontWeight: 500 }} className='mb-2 text-decoration-none d-block ' to='/post'>All</Link>\r\n      {\r\n\r\n        props.data.map((value, key) => {\r\n          return <Link style={{ color: '#4a50c0', fontWeight: 500 }} className='mb-2 text-decoration-none d-block' to={'?Idcategory=' + value._id} key={key}>{value.title}</Link>\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}